{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","logoType","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","splice","prompt","indexOf","push","onbeforeunload","string","stringify","setItem","document","key","i","length","toLowerCase"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,YAAYC,EAAE,WAAF,CAAlB;AACA,IAAMC,UAAUF,UAAUG,IAAV,CAAe,SAAf,CAAhB;AACA,IAAMC,IAAIC,aAAaC,OAAb,CAAqB,GAArB,CAAV;AACA,IAAMC,UAAUC,KAAKC,KAAL,CAAWL,CAAX,CAAhB;AACA,IAAMM,UAAUH,WAAW,CACvB,EAACI,MAAK,GAAN,EAAWC,UAAU,MAArB,EAA6BC,KAAI,0BAAjC,EADuB,EAEvB,EAACF,MAAK,GAAN,EAAWC,UAAU,MAArB,EAA6BC,KAAI,uBAAjC,EAFuB,CAA3B;;AAKA,IAAMC,cAAc,SAAdA,WAAc,CAACD,GAAD,EAAO;AACvB,WAAOA,IAAIE,OAAJ,CAAY,UAAZ,EAAwB,EAAxB,EACNA,OADM,CACE,SADF,EACa,EADb,EAENA,OAFM,CAEE,MAFF,EAEU,EAFV,EAGNA,OAHM,CAGE,IAHF,EAGQ,EAHR,EAINA,OAJM,CAIE,MAJF,EAIU,EAJV,CAAP,CADuB,CAKH;AACvB,CAND;;AAQA,IAAMC,SAAS,SAATA,MAAS,GAAI;AACfhB,cAAUG,IAAV,CAAe,cAAf,EAA+Bc,MAA/B;AACAP,YAAQQ,OAAR,CAAgB,UAACC,IAAD,EAAOC,KAAP,EAAe;AAC3B,YAAMC,MAAMpB,+EAEgBkB,KAAKR,IAAL,CAAU,CAAV,CAFhB,kDAGgBG,YAAYK,KAAKN,GAAjB,CAHhB,wPAUJS,YAVI,CAUSpB,OAVT,CAAZ;AAWAmB,YAAIE,EAAJ,CAAO,OAAP,EAAe,YAAI;AACfC,mBAAOC,IAAP,CAAYN,KAAKN,GAAjB;AACH,SAFD;AAGAQ,YAAIE,EAAJ,CAAO,OAAP,EAAgB,QAAhB,EAAyB,UAACG,CAAD,EAAK;AAC1BA,cAAEC,eAAF,GAD0B,CACP;AACnBjB,oBAAQkB,MAAR,CAAeR,KAAf,EAAsB,CAAtB;AACAJ;AACH,SAJD;AAKH,KApBD;AAqBH,CAvBD;;AAyBAA;;AAEAf,EAAE,YAAF,EACKsB,EADL,CACQ,OADR,EACiB,YAAI;AACb,QAAIV,MAAMW,OAAOK,MAAP,CAAc,cAAd,CAAV;AACA,QAAGhB,IAAIiB,OAAJ,CAAY,MAAZ,MAAsB,CAAzB,EAA2B;AACvBjB,cAAM,aAAaA,GAAnB;AACH;AACFH,YAAQqB,IAAR,CAAa;AACZpB,cAAKG,YAAYD,GAAZ,EAAiB,CAAjB,CADO;AAEZD,kBAAS,MAFG;AAGZC,aAAIA;AAHQ,KAAb;AAKHG;AACC,CAZL;;AAcAQ,OAAOQ,cAAP,GAAwB,YAAI;AAAE;AAC1B,QAAMC,SAASzB,KAAK0B,SAAL,CAAexB,OAAf,CAAf;AACAL,iBAAa8B,OAAb,CAAqB,GAArB,EAAyBF,MAAzB;AACH,CAHD;;AAKAhC,EAAEmC,QAAF,EAAYb,EAAZ,CAAe,UAAf,EAA0B,UAACG,CAAD,EAAK;AAAA,QACpBW,GADoB,GACbX,CADa,CACpBW,GADoB;;AAE3B,SAAI,IAAIC,IAAE,CAAV,EAAaA,IAAE5B,QAAQ6B,MAAvB,EAA+BD,GAA/B,EAAmC;AAC/B,YAAG5B,QAAQ4B,CAAR,EAAW3B,IAAX,CAAgB6B,WAAhB,OAAkCH,GAArC,EAAyC;AACrCb,mBAAOC,IAAP,CAAYf,QAAQ4B,CAAR,EAAWzB,GAAvB;AACH;AACJ;AACJ,CAPD","file":"main.55f17341.map","sourceRoot":"..\\src","sourcesContent":["const $siteList = $('.siteList')\r\nconst $lastLi = $siteList.find('li.last')\r\nconst x = localStorage.getItem('x')\r\nconst xObject = JSON.parse(x)\r\nconst hashMap = xObject || [\r\n    {logo:'i', logoType: 'text', url:'https://www.iconfont.cn/'},\r\n    {logo:'P', logoType: 'text', url:'https://pixso.design/'}\r\n]\r\n\r\nconst simplifyUrl = (url)=>{\r\n    return url.replace('https://', '')\r\n    .replace('http://', '')\r\n    .replace('www.', '')\r\n    .replace('m.', '')\r\n    .replace(/\\/.*/, '')//删除/开头的内容\r\n}\r\n\r\nconst render = ()=>{\r\n    $siteList.find('li:not(.last').remove()\r\n    hashMap.forEach((node, index)=>{\r\n        const $li = $(`<li>\r\n            <div class=\"site\">\r\n                <div class=\"logo\">${node.logo[0]}</div>\r\n                <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n                <div class=\"close\">\r\n                    <svg class=\"icon\">\r\n                        <use xlink:href=\"#icon-close1\"></use>\r\n                    </svg>\r\n                </div>\r\n            </div>        \r\n        </li>`).insertBefore($lastLi)\r\n        $li.on('click',()=>{\r\n            window.open(node.url)\r\n        })    \r\n        $li.on('click', '.close',(e)=>{\r\n            e.stopPropagation()//阻止冒泡\r\n            hashMap.splice(index, 1)\r\n            render()\r\n        })\r\n    })\r\n}\r\n\r\nrender()\r\n\r\n$('.addButton')\r\n    .on('click', ()=>{\r\n        let url = window.prompt('请问你要添加的网址是啥？')\r\n        if(url.indexOf('http')!==0){\r\n            url = 'https://' + url\r\n        }                \r\n       hashMap.push({\r\n        logo:simplifyUrl(url)[0],\r\n        logoType:'text',\r\n        url:url\r\n    })\r\n    render()    \r\n    })\r\n\r\nwindow.onbeforeunload = ()=>{ //记录关闭时候的哈希表\r\n    const string = JSON.stringify(hashMap)\r\n    localStorage.setItem('x',string)\r\n}\r\n\r\n$(document).on('keypress',(e)=>{\r\n    const {key} = e\r\n    for(let i=0; i<hashMap.length; i++){\r\n        if(hashMap[i].logo.toLowerCase() === key){\r\n            window.open(hashMap[i].url)\r\n        }\r\n    }\r\n})\r\n"]}